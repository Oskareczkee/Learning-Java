import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Window extends JFrame {
    private JTextField fileNameTextField;
    private JButton loadButton;
    private JPanel LoadPanel;
    private JTextField circumferenceOfAShapeTextField;
    private JPanel mainPane;
    private DrawPanel DrawPanel;

    public static void main(String args[]) {
        Window window = new Window();
    }

    public Window() {
        setup();
    }

    private ActionListener LoadButtonAction = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String filePath = fileNameTextField.getText();
            File file = new File(filePath);
            CustomShape shape = new CustomShape();

            //load points from file
            try (Scanner sc = new Scanner(file)) {
                List<Point> points = new ArrayList<>();
                while (sc.hasNext()) {
                    int x = 0, y = 0;
                    //load x coord
                    if (sc.hasNextInt())
                        x = sc.nextInt();
                    //load y coord
                    if (sc.hasNextInt())
                        y = sc.nextInt();

                    points.add(new Point(x, y));
                }

                shape.setPoints(points);
                //calculate circumference
                circumferenceOfAShapeTextField.setText("Circumference: " + Double.toString(shape.CalculateCircumference()));
                DrawPanel.setPoints(points);
                DrawPanel.draw();
            } catch (Exception ex) {
                fileNameTextField.setText("File has not been found, or is corrupted");
            }

        }
    };

    WindowAdapter WindowExitMessage = new WindowAdapter() {
        public void windowClosing(WindowEvent e) {
            int confirmed = JOptionPane.showConfirmDialog(null,
                    "Are you sure you want to exit program?", "Do you want to exit?",
                    JOptionPane.YES_NO_OPTION);

            if (confirmed == JOptionPane.YES_OPTION) {
                dispose();
            }
        }
    };

    private void setup() {
        setContentPane(mainPane);
        setTitle("Shape drawer");
        //window listener will take care off closing the window
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        setVisible(true);
        //there are no methods that would set DrawPanel middle point properly, so resize is off
        setResizable(false);
        pack();
        addWindowListener(WindowExitMessage);

        loadButton.addActionListener(LoadButtonAction);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPane = new JPanel();
        mainPane.setLayout(new GridBagLayout());
        mainPane.setEnabled(false);
        LoadPanel = new JPanel();
        LoadPanel.setLayout(new GridBagLayout());
        LoadPanel.setAutoscrolls(false);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 0.2;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPane.add(LoadPanel, gbc);
        fileNameTextField = new JTextField();
        fileNameTextField.setAlignmentX(0.5f);
        fileNameTextField.setAlignmentY(0.5f);
        fileNameTextField.setPreferredSize(new Dimension(300, 30));
        fileNameTextField.setText("File name");
        fileNameTextField.setToolTipText("Write your file name here");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        LoadPanel.add(fileNameTextField, gbc);
        loadButton = new JButton();
        loadButton.setAlignmentX(0.5f);
        loadButton.setAlignmentY(0.5f);
        loadButton.setText("Load");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        LoadPanel.add(loadButton, gbc);
        circumferenceOfAShapeTextField = new JTextField();
        circumferenceOfAShapeTextField.setEditable(false);
        circumferenceOfAShapeTextField.setFocusable(false);
        circumferenceOfAShapeTextField.setText("No shape loaded");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        LoadPanel.add(circumferenceOfAShapeTextField, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 50;
        LoadPanel.add(spacer1, gbc);
        DrawPanel = new DrawPanel();
        DrawPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 0.8;
        mainPane.add(DrawPanel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPane;
    }
}
